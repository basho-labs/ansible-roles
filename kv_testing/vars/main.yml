---
riak_conf_template: '{{ playbook_dir }}/roles/kv_testing/templates/riak.conf.j2'

riak_search:  'on'
riak_backend: 'multi'

riak_node_name: 'riak@127.0.0.1'

# setup Riak environment (bucket-types, users, sources, grants, conf)
riak_bucket_types:
  - { name: plain, props: '{"props":{}}' }
  - { name: mr, props: '{"props":{}}' }
  - { name: no_siblings, props: '{"props":{"allow_mult":"false"}}' }

  - { name: counters, props: '{"props":{"datatype":"counter"}}' }
  - { name: sets, props: '{"props":{"datatype":"set"}}' }
  - { name: maps, props: '{"props":{"datatype":"map"}}' }
  - { name: other_counters, props: '{"props":{"datatype":"counter"}}' }

  - { name: search_type, props: '{"props":{}}' }
  - { name: yokozuna, props: '{"props":{}}' }

  - { name: leveldb_type, props: '{"props":{"backend":"leveldb_backend"}}' }
  - { name: memory_type, props: '{"props":{"backend":"mem_backend"}}' }

  - { name: write_once, props: '{"props":{"write_once":true}}' }

  # PHP Testing Buckets
  - { name: phptest_counters,  props: '{"props":{"datatype":"counter"}}' }
  - { name: phptest_maps, props: '{"props":{"datatype":"map"}}' }
  - { name: phptest_sets, props: '{"props":{"datatype":"set"}}' }
  - { name: phptest_search, props: '{"props":{}}' }
  - { name: phptest_leveldb, props: '{"props":{}}' }

  # TS
  - { name: GeoCheckin, props: '{"props": {"n_val": 3, "table_def": "CREATE TABLE GeoCheckin (geohash varchar not null, user varchar not null, time timestamp not null, weather varchar not null, temperature double, PRIMARY KEY((geohash, user, quantum(time, 15, m)), geohash, user, time))"}}' }
  - { name: GeoCheckin_Wide, props: '{"props": {"n_val": 3, "table_def": "CREATE TABLE GeoCheckin_Wide (geohash varchar not null, user varchar not null, time timestamp not null, weather varchar not null, temperature double, uv_index sint64, observed boolean not null, PRIMARY KEY((geohash, user, quantum(time, 15, m)), geohash, user, time))"}}' }
  - { name: WeatherByRegion, props: '{"props": {"n_val": 3, "table_def": "CREATE TABLE WeatherByRegion (region varchar not null, state varchar not null, time timestamp not null, weather varchar not null, temperature double, uv_index sint64, observed boolean not null, PRIMARY KEY((region, state, quantum(time, 15, m)), region, state, time))"}}' }

riak_users:
  - {user: 'riakuser', password: '', cert: ''}
  - {user: 'riakpass', password: 'Test1234', cert: ''}

riak_sources:
  - {user: 'riakuser', type: 'certificate', cidr: '0.0.0.0/0'}
  - {user: 'riakpass', type: 'password', cidr: '0.0.0.0/0'}

riak_grants:
  - {subject: 'riakuser', container: 'any', permissions: '{{ it_permissions|join(",")}}'}
  - {subject: 'riakpass', container: 'any', permissions: '{{ it_permissions|join(",")}}'}
